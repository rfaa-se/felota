use raylib::color::Color;

pub const WINDOW_WIDTH: i32 = 1280;
pub const WINDOW_HEIGHT: i32 = 720;
pub const RENDER_WIDTH: i32 = 1280;
pub const RENDER_HEIGHT: i32 = 720;
pub const VIEWPORT_WIDTH: i32 = 1150;
pub const VIEWPORT_HEIGHT: i32 = 720;
pub const TARGETING_AREA_WIDTH: i32 = VIEWPORT_WIDTH - 200;
pub const TARGETING_AREA_HEIGHT: i32 = VIEWPORT_HEIGHT - 200;
pub const COSMOS_WIDTH: i32 = 20000;
pub const COSMOS_HEIGHT: i32 = 20000;
pub const TICK_SCHEDULED: u32 = 4;
pub const MINIMAP_X: i32 = HUD_X;
pub const MINIMAP_Y: i32 = HUD_HEIGHT - MINIMAP_HEIGHT;
pub const MINIMAP_WIDTH: i32 = HUD_WIDTH;
pub const MINIMAP_HEIGHT: i32 = HUD_HEIGHT / 8;
pub const MINIMAP_AREA_WIDTH: i32 = VIEWPORT_WIDTH * 10;
pub const MINIMAP_AREA_HEIGHT: i32 = VIEWPORT_HEIGHT * 10;
pub const HUD_SEPARATOR_COLOR: Color = Color::new(70, 70, 70, 255);
pub const HUD_BACKGROUND_COLOR: Color = Color::new(10, 10, 10, 255);
pub const HUD_X: i32 = VIEWPORT_WIDTH;
pub const HUD_Y: i32 = 0;
pub const HUD_HEIGHT: i32 = RENDER_HEIGHT;
pub const HUD_WIDTH: i32 = RENDER_WIDTH - VIEWPORT_WIDTH;
pub const DEBUG_COLOR: Color = Color::WHITESMOKE;
pub const RESPAWN_TIMER: u8 = 50;
pub const STARFIELD_WIDTH: i32 = 512;
pub const STARFIELD_HEIGHT: i32 = 512;
